[{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://swarm-lab.github.io/trackRcv/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://swarm-lab.github.io/trackRcv/articles/z1_installing_trackRcv.html","id":"installing-trackrcv","dir":"Articles","previous_headings":"","what":"1. Installing trackRcv","title":"1. Installing trackRcv","text":"trackRcv currently available CRAN. can install trackRcv rest dependencies simply typing following command R console:","code":"pak::pak(\"swarm-lab/trackRcv\")"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z1_installing_trackRcv.html","id":"from-cran","dir":"Articles","previous_headings":"","what":"1.1. From CRAN","title":"1. Installing trackRcv","text":"trackRcv currently available CRAN.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z1_installing_trackRcv.html","id":"from-github","dir":"Articles","previous_headings":"","what":"1.2. From GitHub","title":"1. Installing trackRcv","text":"can install trackRcv rest dependencies simply typing following command R console:","code":"pak::pak(\"swarm-lab/trackRcv\")"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z1_installing_trackRcv.html","id":"setting-up-trackrcv","dir":"Articles","previous_headings":"","what":"2. Setting up trackRcv","title":"1. Installing trackRcv","text":"installation complete, need run following command R console: Answer “Yes” questions. create dedicated Python virtual environment containing Python dependencies trackRcv needs run. environment interfere Python environments system, can removed time running following command: done, can proceed next tutorial learn use trackRcv.","code":"trackRcv::install_cv() trackRcv::remove_cv()"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"0. Introduction","title":"2. Tracking objects","text":"ready process video, can launch trackR typing following command R console:  open app launcher either viewer pane RStudio Positron, separate window, depending local configuration. RStudio least, can control app opens setting launch.browser option. instance: launch app RStudio viewer pane. launcher running, click “Track” button launch tracking app. launcher close app start shortly .","code":"library(trackRcv) trackR() trackR(launch.browser = shiny::paneViewer())"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"video-module","dir":"Articles","previous_headings":"","what":"1. Video module","title":"2. Tracking objects","text":"first step tracking process load video file app. , simply click “Select video” button. bring navigator use locate video file like process. located video file navigator, click “Select” button. app open video display first image display window (see ).  can navigate video sliding green tab along timeline displayed video. gray tabs can used restrict analysis specific time interval video. app opened video, can move “Background module” clicking tab marked “2” right side control panel.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"background-module","dir":"Articles","previous_headings":"","what":"2. Background module","title":"2. Tracking objects","text":"“Background module”, can either choose load existing background image (e.g., image empty experimental setup start experiment) can ask app automatically reconstruct background video.  choose select existing background image, just click “Select existing background” button use navigator locate select desired image. can skip rest section go directly next section. choose let app reconstruct background video, first need decide two things: “Mean” computes background image pixel average corresponding pixels selected video frames. fast algorithm. However always produce good results. “Median” computes background image pixel median corresponding pixels selected video frames. usually produces better result “Mean”, take longer complete. “Minimum” computes background image pixel minimum corresponding pixels selected video frames. usually produces good result objects isolate lighter background. “Maximum” computes background image pixel maximum corresponding pixels selected video frames. usually produces good result objects isolate darker background. “Number frames estimating background”. Better results usually obtained larger number frames background slower reconstruct. selected two parameters, click “Automatically estimate background” button app start reconstructing background video. occasions, like image left , app reconstruct background completely. can happen, instance, object move entirety video like case .  can fix “ghosts” clicking “Select ghost removal” button. allow draw polygon around object remove background using left button mouse/trackpad. surrounded object polygon, use return key keyboard close polygon. app use pixels surrounding polygon traced replace object best guess color background . Note: ghost removal mode basic may yield good results complex backgrounds. Another option save background file ghosts use advanced image editing software remove (instance, Photoshop’s Remove tool can give much better results). happy background generated app, can click “Save background file” button save background image later (re)use.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"mask-module","dir":"Articles","previous_headings":"","what":"3. Mask module","title":"2. Tracking objects","text":"“Mask module” optional can skipped. used like restrict tracking specific areas image, instance exclude outside experimental arena things may moving tracked (e.g., hands experimenter). default, app use entirety visible frame perform tracking.  control panel “Mask module” allows either use existing mask design . use existing mask, click “Select existing mask” button use navigator locate select desired mask image. mask image grayscale image resolution video. Non-black portions image included tracking black portion excluded. Different shades gray can used delimit different parts mask. like design mask (modify existing mask loaded app), can use following controls: “Include ” tells app use entirety visible frame perform tracking. useful button reset mask default setting. “Exclude ” tells app use none visible frame perform tracking. useful button wipe mask adding authorized areas tracking using “Add polygon ROI” ”Add ellipse ROI” buttons. “Add polygon ROI” (region interest) allows draw polygon mask using left button mouse/trackpad. sastified polygon, use return key keyboard close . “Including” radio button selected, area inside polygon included tracking. Otherwise, excluded. “Add ellipse ROI” allows draw ellipse mask indicating 5 points along periphery area interest. Use left button mouse/trackpad . finished adding 5 points, app compute ellipse best fitting . recommended select 5 points roughly equidistant along periphery area interest. “Including” radio button selected, area inside ellipse included tracking. Otherwise, excluded. “ROI id” allows assign unique identifier region interest, allowing separating tracking objects post-processing.  can combine including/excluding polygons ellipses define mask complex detailed like. Included areas take slightly greener tint display window excluded areas take slightly red tint (see images ). satisfied design, can save later (re)use clicking “Save mask file” button.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"segmentation-module","dir":"Articles","previous_headings":"","what":"4. Segmentation module","title":"2. Tracking objects","text":"Segmentation process isolating objects interests background image. order , app first needs know whether looking objects darker lighter background. can ticking appropriate radio button top control panel “Segmentation module”.  done, app need know different background pixel must considered part one objects isolate. order indicate information app, can use threshold slider control panel. allow set threshold difference pixel considered part object part background. objective find threshold creates good separation objects isolate background. can see result changing thresholds display window: parts image considered object given threshold surrounded green line (see image ). good threshold result green lines tightly following edges objects isolate. can also let app search good threshold clicking “Autothreshold” button control panel. app can use multiple methods estimate threshold provides good segmentation results. can try select method using dropdown menu next “Autothreshold” button, observe effect running autothresholding operation . can tweak manually suggested threshold want. Finally, can exclude fine details objects isolate (e.g., legs termites image ) playing “Contour smoothing“ slider. can useful obtain accurate tracking centers mass objects (fine details can introduce unnecessary noise trajectory). recommended look result segmentation process different parts video using control slider video display. ensure selected threshold gives good results throughout video.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"identification-module","dir":"Articles","previous_headings":"","what":"5. Identification module","title":"2. Tracking objects","text":"default, app can track objects reliably long come close contact . happens, however, app use number heuristics try separate . heuristics based various parameters objects, namely: maximum width, pixels maximum height, pixels maximum surface area, pixels density, ratio surface area surface area ellipse enclosing object (objects high density resemble better perfect ellipses). can set parameters manually using corresponding input boxes control panel “Identification module”. can also let app search good values parameters clicking “Auto parameters” button control panel. app look parameters provide good separation results general. can tweak manually suggested parameters want.  recommended look result identification process different parts video using control slider video display. ensure selected parameters give good results throughout video.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"scaling-module","dir":"Articles","previous_headings":"","what":"6. Scaling module","title":"2. Tracking objects","text":"default, app set origin coordinate system top-left corner video. can change clicking “Set origin” button control panel. use mouse click location video frame want origin .  can also set scaling factor directly converting pixel coordinates real-world coordinates. , click “Set scale” button control panel. use mouse select two points video frame known certain distance apart real world. pop-window ask enter distance two points unit measurement want use. app automatically convert tracking results real-world coordinates .","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"tracking-module","dir":"Articles","previous_headings":"","what":"7. Tracking module","title":"2. Tracking objects","text":"made tracking module! just clicks away starting process video. parameters can set launching tracking: “Look back” controls many past frames tracking algorithm take account associate detected object track. useful parameter take account , instance, objects tend disappear frames time time. “Maximum distance” controls maximum distance pixels object can move two frames still considered belonging track. “Preview tracks tracking” controls whether preview tracking results displayed tracking process. preview shows 1 frame per second video trajectories overlaid top. slow bit tracking process, can used check tracking working well deciding right set tracking parameters.  set, can finally click “Start tracking” button, set file navigator pops store tracking data, just let app works magic. data saved CSV file next section detail content file.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z2_tracking_objects.html","id":"output","dir":"Articles","previous_headings":"","what":"8. Output data","title":"2. Tracking objects","text":"app done processing video, resulting CSV file contain 8 12 columns depending whether set real-world scale origin “Scale module”. columns following: “frame” video frame number measurements along corresponding row made. “track” identity tracked object estimated app. “x” x coordinate object location pixels context video frame. origin set top-left corner frame. “y” y coordinate object location pixels context video frame. origin set top-left corner frame. “width” width pixels object. “height” height pixels object. “angle” angle degrees main axis object y axis. “n” number pixels covered object image. set real-world scale origin “Tracking module”, following extra columns saved: “x_[unit]” x coordinate object location real-world [unit]. origin set real-worl equivalent defined “Scale module”. “y_[unit]” y coordinate object location real-world [unit]. origin set real-worl equivalent defined “Tracking module”. “width_[unit]” width real-world [unit] object. “height_[unit]” height real-world [unit] object. video used throughout tutorial provided Sridhar, V. H., Roche, D. G., Gingins, S. (2019). Tracktor: Image-based automated tracking animal movement behaviour. Methods Ecol. Evol. 10, 691. doi:10.1111/2041-210X.13166 used permission authors.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z3_fixing_tracks.html","id":"introduction","dir":"Articles","previous_headings":"","what":"0. Introduction","title":"3. Fixing tracks","text":"finished tracking video, can manually inspect results fix potential error using track fixing app provided package. can launch app typing following command R console:  open app launcher either viewer pane RStudio Positron, separate window, depending local configuration. RStudio least, can control app opens setting launch.browser option. instance: launch app RStudio viewer pane. launcher running, click “Fix” button launch tracking app. launcher close app start shortly .","code":"library(trackRcv) trackR() trackR(launch.browser = shiny::paneViewer())"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z3_fixing_tracks.html","id":"fixer-module","dir":"Articles","previous_headings":"","what":"1. Fixer module","title":"3. Fixing tracks","text":"first step fixing process load video file tracking data app. , simply click “Select video” button. bring navigator use locate video file like track. located video file navigator, click “Select” button. app open video display first image display window (see ). Repeat process “Select tracks” button load tracking data. done, tracked objects indicated colored box number corresponding tracked identity (see ).  can navigate video sliding green tab along timeline displayed video. can also use arrows keyboard navigate video, either frame frame, one second time. navigation controls, find dropdown menu lists series suspected issues tracking data. simply positions video existing track suddenly disappears, new track suddenly appears. necessarily indicate actual error, often indicative problem tracking. can navigate suspected issues selecting dropdown menu. 6 buttons allow perform number correcting operations find trackR made mistake tracking: “Reassign” button (“q” key keyboard) open reassignment menu. menu opened, can use first dropdown selector select track assign new number reassign previously existing track. can type input box number like assign track. “Remove” button (“w” key keyboard) open removal menu. menu opened, can use dropdown selector select track remove. “Swap IDs” button (“e” key keyboard) open ID swapping menu. menu opened, can use two dropdown selectors select tracks swap. Note swapping occur frame . Previous frames affected tracks retain original ID. “Merge IDs” button (“r” key keyboard) open ID merging menu. menu opened, can use two dropdown selectors select tracks merge together. Note resulting track retain ID first selected track. “Undo” button (“” key keyboard) undo change made fixing session reverse order made. “Save” button (“s” key keyboard) save modifications made fixing session. modifications saved different file one containing original tracking results prevent accidental modifications permanently damage original results. modified file name saved location original file “_fixed” appended name. Note interrupt fixing session end video, can resume loading “[original_file_name]_fixed.csv” file instead original one. case, new correction also saved “[original_file_name]_fixed.csv” file. buttons, basic statistics tracks displayed fixing controls. can useful track progress fixing session. instance, statistics table shows file contains 10 tracks know 8 individuals experiment, good indication errors remain fixed. Finally, bottom control panel, can modify “Tag scale” “Tag line width” parameters make track tags visible video.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z3_fixing_tracks.html","id":"output","dir":"Articles","previous_headings":"","what":"2. Output data","title":"3. Fixing tracks","text":"click “Save” button app, data saved “[original_file_name]_fixed.csv” file columns saved originally trackR (see details). file also contain 2 additional columns: “track_fixed” identity tracked object corrections applied. track column retains original, uncorrected identity. “ignore” indicates whether can ignore (TRUE) (FALSE) corresponding row analyze data. Ignored rows , instance, tracks chosen remove merge another track. video used throughout tutorial provided Sridhar, V. H., Roche, D. G., Gingins, S. (2019). Tracktor: Image-based automated tracking animal movement behaviour. Methods Ecol. Evol. 10, 691. doi:10.1111/2041-210X.13166 used permission authors.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/articles/z4_visualizing_tracks.html","id":"introduction","dir":"Articles","previous_headings":"","what":"0. Introduction","title":"4. Visualizing tracks","text":"tracking dataset ready, can visualize using trajectory visualization app provided package. can launch app typing following command R console:  open app launcher either viewer pane RStudio Positron, separate window, depending local configuration. RStudio least, can control app opens setting launch.browser option. instance: launch app RStudio viewer pane. launcher running, click “Visualize” button launch visualization app. launcher close app start shortly .","code":"library(trackRcv) trackR() trackR(launch.browser = shiny::paneViewer())"},{"path":"https://swarm-lab.github.io/trackRcv/articles/z4_visualizing_tracks.html","id":"player-module","dir":"Articles","previous_headings":"","what":"1. Player module","title":"4. Visualizing tracks","text":"first step visualization process load video file tracking data app. , simply click “Select video” button. bring navigator use locate video file like track. located video file navigator, click “Select” button. app` open video display first image display window (see ). Repeat process “Select tracks” button load tracking data. done, tracked objects indicated colored box number corresponding tracked identity (see ).  can navigate video sliding green tab along timeline displayed video. can also use arrows keyboard navigate video, either frame frame, one second time. navigation controls, find two tick boxes. left, “Show IDs” tick box allows show hide IDs tracked objects within colored boxes delineating . right, “Show tracks” tick box allows show hide trajectories tracked objects taken fixed number frames. tick boxes, find four numeric input fields: “Track width (pixels)” allows adjust width lines delineating tracked objects representing trajectories; “Track length (frames)” allows adjust number frames used represent trajectories tracked objects; “Tag scale” allows adjust font size tags represent identities tracked objects; “Tag line width” allows adjust font thickness tags. Finally, bottom app window, “Export video” button allows export video tracked objects superimposed . clicking button, app prompt select location save exported video. done, export start video saved selected location. video used throughout tutorial provided Sridhar, V. H., Roche, D. G., Gingins, S. (2019). Tracktor: Image-based automated tracking animal movement behaviour. Methods Ecol. Evol. 10, 691. doi:10.1111/2041-210X.13166 used permission authors.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Garnier. Author, maintainer.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garnier S (2025). trackRcv: Package (One Line, Title Case). R package version 0.1.0, https://swarm-lab.github.io/trackRcv/.","code":"@Manual{,   title = {trackRcv: What the Package Does (One Line, Title Case)},   author = {Simon Garnier},   year = {2025},   note = {R package version 0.1.0},   url = {https://swarm-lab.github.io/trackRcv/}, }"},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"What the Package Does (One Line, Title Case)","text":"trackRcv object tracker R based Python OpenCV. provides easy--use (think) graphical interface allowing users perform multi-object video tracking range conditions maintaining individual identities. trackRcv uses background subtraction segment objects video. background image can provided user can computed trackRcv automatically situations. Overlapping objects separated using cross-entropy clustering, automated classification method provides good computing performance able handle various types object shapes (see CEC package R information cross-entropy clustering). tracking parameters can automatically estimated trackRcv can set manually user. trackRcv also allows users exclude parts image using masks can easily created customized directly within app. Finally, trackRcv provides several convenience apps correct common errors occurs video recording, manually inspect fix tracking errors, export publication-ready videos showing moving objects track overlaid top .","code":""},{"path":"https://swarm-lab.github.io/trackRcv/index.html","id":"quick-start-guides","dir":"","previous_headings":"","what":"Quick start guides","title":"What the Package Does (One Line, Title Case)","text":"1. Installing trackRcv 2. Tracking objects 3. Fixing tracks 4. Visualizing tracks","code":""},{"path":"https://swarm-lab.github.io/trackRcv/index.html","id":"faq","dir":"","previous_headings":"","what":"FAQ","title":"What the Package Does (One Line, Title Case)","text":"trackRcv compare video tracking solutions? really need another one? trackRcv belongs category ‘classical’ tracking programs, similar spirit tracking software Ctrax, tracktor, sadly defunct SwisTrack. relies good ol’ fashion image processing, robust cross-entropy clustering, simple, yet efficient, assignment algorithms (Hungarian method case). trackRcv use fancy machine learning methods. downside trackRcv’s tracking reliability may inferior advanced software; upside require beast computer run. trackRcv capable tracking objects videos accuracy require, can try YOLO-based AI counterpart, trackRai – something break? Can use trackRcv ‘production’ mode? Something definitely break. mostly one-person operation promise fully tested every single scenario challenge trackRcv. said, work fine cases certainly usable tracking projects. run issue, please report : https://github.com/swarm-lab/trackRcv/issues. – can help? trackRcv open-source project, meaning can freely modify code implement new functionalities. coding skills, welcome contribute new code code improvement submitting pull requests GitHub repository project : https://github.com/swarm-lab/trackRcv. best review integrate quickly. feel like contributing code, can also help submitting bug reports feature requests using issue tracker GitHub repository project : https://github.com/swarm-lab/trackRcv/issues. extremely helpful catch correct errors code, guide development trackRcv integrating functionalities requested community.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/backgrounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the Background of a Video — backgrounder","title":"Reconstruct the Background of a Video — backgrounder","text":"function attempts reconstruct background video filmed fixed point view.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/backgrounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the Background of a Video — backgrounder","text":"","code":"backgrounder(   video,   n = 10,   method = \"median\",   prob = 0.025,   start = NULL,   end = NULL )"},{"path":"https://swarm-lab.github.io/trackRcv/reference/backgrounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the Background of a Video — backgrounder","text":"video Python/OpenCV VideoCapture object. n number images video used reconstruct background. method name method reconstruct background. currently 4 methods available: \"mean\" (uses average value pixel background), \"median\" (uses median value pixel background), \"min\" (uses minimum value pixel background), \"max\" (uses maximum value pixel background), \"quant\" (uses arbitrary quantile value pixel background). prob method = \"quant\", quantile value use. start, end start end frames video use background reconstruction. set, first last frames used.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/backgrounder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the Background of a Video — backgrounder","text":"Python/Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/backgrounder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reconstruct the Background of a Video — backgrounder","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":null,"dir":"Reference","previous_headings":"","what":"Color to BGR Conversion — col2bgr","title":"Color to BGR Conversion — col2bgr","text":"R color BRG (blue/green/red) conversion.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color to BGR Conversion — col2bgr","text":"","code":"col2bgr(col, alpha = FALSE)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color to BGR Conversion — col2bgr","text":"col Vector three kinds R color specifications, .e., either color name (listed colors()), hexadecimal string form \"#rrggbb\" \"#rrggbbaa\" (see rgb), positive integer meaning palette()[]. alpha Logical value indicating whether alpha channel (opacity) values returned.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color to BGR Conversion — col2bgr","text":"integer matrix three four (alpha = TRUE) rows number columns length col. col names used column names return value.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color to BGR Conversion — col2bgr","text":"NA (integer character) \"NA\" mean transparent. Values col one types coerced: real vectors coerced integer types character. (factors coerced character: cases class ignored coercion.) Zero negative values col error.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/col2bgr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Color to BGR Conversion — col2bgr","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect OpenCV Installation — cv_installed","title":"Detect OpenCV Installation — cv_installed","text":"function detects whether OpenCV correctly installed system.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect OpenCV Installation — cv_installed","text":"","code":"cv_installed()"},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect OpenCV Installation — cv_installed","text":"logical indicating presence absence OpenCV.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_installed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect OpenCV Installation — cv_installed","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect OpenCV Version — cv_version","title":"Detect OpenCV Version — cv_version","text":"function detects version OpenCV installed system.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect OpenCV Version — cv_version","text":"","code":"cv_version()"},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect OpenCV Version — cv_version","text":"character string. NA indicates OpenCV installed system.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/cv_version.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect OpenCV Version — cv_version","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Points on an Ellipse — ellipse","title":"Points on an Ellipse — ellipse","text":"functions computes npoints regularly spaced along ellipse.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points on an Ellipse — ellipse","text":"","code":"ellipse(x, y, width, height, angle, npoints = 100)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points on an Ellipse — ellipse","text":"x, y Numeric values corresponding coordinates center ellipse. width, height Numeric values corresponding width height ellipse. angle Numeric value corresponding angle ellipse relative y axis. npoints number points compute.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Points on an Ellipse — ellipse","text":"matrix two columns corresponding x y coordinates points.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/ellipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Points on an Ellipse — ellipse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fourcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Codec Name to FOURCC Code — fourcc","title":"Codec Name to FOURCC Code — fourcc","text":"fourcc translates 4-character name video codec corresponding FOURCC code.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fourcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codec Name to FOURCC Code — fourcc","text":"","code":"fourcc(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/fourcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codec Name to FOURCC Code — fourcc","text":"x 4-element character chain corresponding name valid video codec. list valid codec names can found archived page fourcc site https://www.fourcc.org/codecs.php.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fourcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Codec Name to FOURCC Code — fourcc","text":"integer value corresponding FOURCC code video codec.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fourcc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Codec Name to FOURCC Code — fourcc","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fps.html","id":null,"dir":"Reference","previous_headings":"","what":"Framerate of a Python VideoCapture Object — fps","title":"Framerate of a Python VideoCapture Object — fps","text":"function returns framerate Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Framerate of a Python VideoCapture Object — fps","text":"","code":"fps(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/fps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Framerate of a Python VideoCapture Object — fps","text":"x Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Framerate of a Python VideoCapture Object — fps","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/fps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Framerate of a Python VideoCapture Object — fps","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Install and Update OpenCV — install_cv","title":"Install and Update OpenCV — install_cv","text":"function automates installation/updating OpenCV Python dependencies dedicated Python virtual environment use trackRcv apps.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install and Update OpenCV — install_cv","text":"","code":"install_cv(python_version = \"3.12.5\")"},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install and Update OpenCV — install_cv","text":"python_version character string indicating version Python like OpenCV run (default: \"3.12.5\"). versions Python necessarily work system, chosen default works systems tested far.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install and Update OpenCV — install_cv","text":"installation/update completes successfully, data frame indicating location OpenCV installation version number.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Install and Update OpenCV — install_cv","text":"requested version Python activated system, function attempt install first creating dedicated Python virtual environment.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/install_cv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Install and Update OpenCV — install_cv","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Numpy Array — is_image","title":"Test for a Numpy Array — is_image","text":"function tests whether object Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Numpy Array — is_image","text":"","code":"is_image(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Numpy Array — is_image","text":"x R object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Numpy Array — is_image","text":"logical indicating whether object Numpy array (TRUE) (FALSE).","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_image.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Numpy Array — is_image","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_video_capture.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for a Python VideoCapture Object — is_video_capture","title":"Test for a Python VideoCapture Object — is_video_capture","text":"function tests whether object Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_video_capture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for a Python VideoCapture Object — is_video_capture","text":"","code":"is_video_capture(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_video_capture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for a Python VideoCapture Object — is_video_capture","text":"x R object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_video_capture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for a Python VideoCapture Object — is_video_capture","text":"logical indicating whether object Python VideoCapture object (TRUE) (FALSE).","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/is_video_capture.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for a Python VideoCapture Object — is_video_capture","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/kbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized Cross-Entropy Clustering — kbox","title":"Customized Cross-Entropy Clustering — kbox","text":"function performs cross-entropy clustering data matrix. based cec limited 2D matrices implements splitting process.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/kbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized Cross-Entropy Clustering — kbox","text":"","code":"kbox(   x,   centers = 1,   iter.max = 10,   split = FALSE,   split.width = Inf,   split.height = Inf,   split.density = 0,   min.size = 0,   split.sensitivity = 0 )"},{"path":"https://swarm-lab.github.io/trackRcv/reference/kbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customized Cross-Entropy Clustering — kbox","text":"x numeric matrix two columns. centers Either matrix initial centers number initial centers. iter.max Maximum number iterations clustering. split Enables split mode. mode discovers new clusters initial clustering, trying split single clusters two. split.width maximum authorized width cluster. cluster wider split.width, function attempt split two. split.height maximum authorized height cluster. cluster higher split.height, function attempt split two. split.density minimum authorized density cluster. cluster less dense split.density, function attempt split two. min.size minimum authorized size (number items) cluster. cluster smaller min.size, function attempt split two. split.sensitivity minimum amount improvement cost function cross-entropy clustering splitting event considered valid.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/kbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customized Cross-Entropy Clustering — kbox","text":"matrix 6 columns: x y coordinates centers clusters, width, height, angle covariance ellipse best describing cluster, number element cluster.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/kbox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customized Cross-Entropy Clustering — kbox","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/merge_ellipses.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Two Ellipses — merge_ellipses","title":"Merge Two Ellipses — merge_ellipses","text":"functions merges two ellipses approximating joint ellipsoid hull, ellipsoid minimal area periphery ellipse lie just inside boundary ellipsoid.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/merge_ellipses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Two Ellipses — merge_ellipses","text":"","code":"merge_ellipses(ell_1, ell_2, n_points = 5, ...)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/merge_ellipses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Two Ellipses — merge_ellipses","text":"ell_1, ell_2 Numeric vector corresponding five parameters defining ellipse: centroid ellipse (x, y), width, height, angle (degrees). n_points number points ellipse used approximate joint ellipsoid hull. ... Additional parameters passed ellipsoidhull.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/merge_ellipses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Two Ellipses — merge_ellipses","text":"numeric vector corresponding five parameters defining joint ellipse.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/merge_ellipses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge Two Ellipses — merge_ellipses","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Columns in a Numpy Array — n_col","title":"Number of Columns in a Numpy Array — n_col","text":"function returns number columns present Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Columns in a Numpy Array — n_col","text":"","code":"n_col(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Columns in a Numpy Array — n_col","text":"x Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Columns in a Numpy Array — n_col","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_col.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Columns in a Numpy Array — n_col","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Frames in a Python VideoCapture Object — n_frames","title":"Number of Frames in a Python VideoCapture Object — n_frames","text":"function returns number frames present Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Frames in a Python VideoCapture Object — n_frames","text":"","code":"n_frames(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Frames in a Python VideoCapture Object — n_frames","text":"x Python VideoCapture object.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Frames in a Python VideoCapture Object — n_frames","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_frames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Frames in a Python VideoCapture Object — n_frames","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Rows in a Numpy Array — n_row","title":"Number of Rows in a Numpy Array — n_row","text":"function returns number rows present Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Rows in a Numpy Array — n_row","text":"","code":"n_row(x)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Rows in a Numpy Array — n_row","text":"x Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Rows in a Numpy Array — n_row","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/n_row.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Rows in a Numpy Array — n_row","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/optim_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an Ellipse — optim_ellipse","title":"Fit an Ellipse — optim_ellipse","text":"Given set x/y positions, function attempts find best fitting ellipse goes points.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/optim_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an Ellipse — optim_ellipse","text":"","code":"optim_ellipse(x, y)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/optim_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an Ellipse — optim_ellipse","text":"x, y Vectors x x positions.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/optim_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an Ellipse — optim_ellipse","text":"vector 5 elements: x y coordinated center ellipse, width height ellipse, angle ellipse relative y axis degrees.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/optim_ellipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit an Ellipse — optim_ellipse","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/read_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Specific Frame in a Python VideoCapture Object — read_frame","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"function reads specific frame Python VideoCapture object returns Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/read_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"","code":"read_frame(x, i)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/read_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"x Python VideoCapture object. 1-indexed frame read.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/read_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"Numpy array.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/read_frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Specific Frame in a Python VideoCapture Object — read_frame","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/remove_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove OpenCV — remove_cv","title":"Remove OpenCV — remove_cv","text":"function automates removal OpenCV Python dependencies system.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/remove_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove OpenCV — remove_cv","text":"","code":"remove_cv()"},{"path":"https://swarm-lab.github.io/trackRcv/reference/remove_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove OpenCV — remove_cv","text":"Nothing.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/remove_cv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove OpenCV — remove_cv","text":"function remove dedicated Python virtual environment system. Python installed execution install_cv(), removed.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/remove_cv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove OpenCV — remove_cv","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/simplerTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"A Simple Tracker — simplerTracker","title":"A Simple Tracker — simplerTracker","text":"Given set current x/y positions, function attempts find trajectory belong set past tracked positions using Hungarian method.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/simplerTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Simple Tracker — simplerTracker","text":"","code":"simplerTracker(current, past, maxDist = 10)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/simplerTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Simple Tracker — simplerTracker","text":"current data frame least 4 columns: x, y, frame, track. past data frame least 4 columns: x, y, frame, track. maxDist maximum distance two successive positions belonging trajectory.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/simplerTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Simple Tracker — simplerTracker","text":"data frame least 4 columns: x, y, frame, track.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/simplerTracker.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Simple Tracker — simplerTracker","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":null,"dir":"Reference","previous_headings":"","what":"App Launcher — trackR","title":"App Launcher — trackR","text":"function starts app launcher gives user access Shiny apps provided trackRcv.","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App Launcher — trackR","text":"","code":"trackR(...)"},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App Launcher — trackR","text":"... Parameters passed shiny::runApp().","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App Launcher — trackR","text":"function return anything.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"App Launcher — trackR","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackRcv/reference/trackR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"App Launcher — trackR","text":"","code":"if (FALSE) { # \\dontrun{ trackR() } # }"}]
